### Todos

- remove stakers (staker should just be another user)

- create user from UI

- add series table (one series has many tournaments)

- show series with tournaments in UI

- create tournament in series

- create series from UI

- minimal css

- refactor elm
  - better model (forms with maybes)
  - decoders
  - graphql queries
  - add tests?

- add tournament result for player -- results table, with prize, player_id, tournament_id
- add cost field to staking contract (automatically generated?)
- add winnings field to staking contract
- change percents sold to float

- add stake_paid and winnings_paid to staking contract

- in `create_staking_contract`, I need to check that staker, tournament, user
actually exist in the database; how to do that? --- assoc_constraint maybe?

- add uniqueness constraint of email, and all other constraints necessary

- remove hard-coded url in front-end

- maybe remove timestamps()?

- host address not hardcoded

- update tournament table to have an entry cost/fee, maybe No of entries, any other data?

- user authentication/session to support multiple users


### Features for later on:

- Staker view (a staker can only see what they staked on, without seeing other stakers)

- emails for winnings, summary, etc..

- sweat patch (player can create a live feed for stakers and friends to know how they're doing and provide supports)
